{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\portfolio\\\\portfolio\\\\src\\\\components\\\\Technologies.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Technologies() {\n  const sections = [{\n    title: \"🖥️ Frontend\",\n    items: [\"html5\", \"css3\", \"javascript\", \"angular\", \"bootstrap\", \"vscode\"]\n  }, {\n    title: \"🛠️ Backend\",\n    items: [\"java\", \"csharp\", \"kotlin\", \"php\", \"spring\", \"dotnet\", \"blazor\"]\n  }, {\n    title: \"🧰 Herramientas\",\n    items: [\"git\", \"github\", \"docker\", \"firebase\", \"intellij\", \"visualstudio\", \"androidstudio\"]\n  }, {\n    title: \"📚 Aprendiendo\",\n    items: [\"mongodb\", \"mysql\", \"microsoftsqlserver\", \"xampp\"]\n  }];\n  const getIconClass = name => {\n    const mapping = {\n      java: \"devicon-java-plain\",\n      csharp: \"devicon-csharp-line\",\n      kotlin: \"devicon-kotlin-plain\",\n      html5: \"devicon-html5-plain\",\n      css3: \"devicon-css3-plain\",\n      javascript: \"devicon-javascript-plain\",\n      php: \"devicon-php-plain\",\n      spring: \"devicon-spring-plain\",\n      dotnet: \"devicon-dotnetcore-plain\",\n      blazor: \"devicon-dotnetcore-plain\",\n      angular: \"devicon-angularjs-plain\",\n      bootstrap: \"devicon-bootstrap-plain\",\n      xampp: \"devicon-xampp-plain\",\n      mysql: \"devicon-mysql-plain\",\n      microsoftsqlserver: \"devicon-microsoftsqlserver-plain\",\n      mongodb: \"devicon-mongodb-plain\",\n      git: \"devicon-git-plain\",\n      github: \"devicon-github-original\",\n      docker: \"devicon-docker-plain\",\n      firebase: \"devicon-firebase-plain\",\n      intellij: \"devicon-intellij-plain\",\n      visualstudio: \"devicon-visualstudio-plain\",\n      vscode: \"devicon-vscode-plain\",\n      androidstudio: \"devicon-androidstudio-plain\"\n    };\n    return mapping[name] || \"devicon-devicon-plain\";\n  };\n\n  // Para el icono de GitHub queremos forzar color blanco\n  const getIconStyle = name => {\n    if (name === \"github\") return {\n      color: \"white\"\n    };\n    return {};\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 bg-[#0d1117] text-white space-y-8\",\n    children: sections.map(section => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold mb-4\",\n        children: section.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-3 gap-6\",\n        children: section.items.map(tech => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col items-center justify-center w-[90px] h-[90px] bg-[#161b22] rounded-lg shadow-md\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: `${getIconClass(tech)} colored text-4xl`,\n            style: getIconStyle(tech)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-xs mt-2 capitalize\",\n            children: tech\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this)]\n        }, tech, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, section.title, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_c = Technologies;\nvar _c;\n$RefreshReg$(_c, \"Technologies\");","map":{"version":3,"names":["Technologies","sections","title","items","getIconClass","name","mapping","java","csharp","kotlin","html5","css3","javascript","php","spring","dotnet","blazor","angular","bootstrap","xampp","mysql","microsoftsqlserver","mongodb","git","github","docker","firebase","intellij","visualstudio","vscode","androidstudio","getIconStyle","color","_jsxDEV","className","children","map","section","fileName","_jsxFileName","lineNumber","columnNumber","tech","style","_c","$RefreshReg$"],"sources":["C:/Users/Usuario/Desktop/portfolio/portfolio/src/components/Technologies.jsx"],"sourcesContent":["export default function Technologies() {\r\n  const sections = [\r\n    {\r\n      title: \"🖥️ Frontend\",\r\n      items: [\r\n        \"html5\", \"css3\", \"javascript\", \"angular\", \"bootstrap\", \"vscode\"\r\n      ],\r\n    },\r\n    {\r\n      title: \"🛠️ Backend\",\r\n      items: [\r\n        \"java\", \"csharp\", \"kotlin\", \"php\", \"spring\", \"dotnet\", \"blazor\"\r\n      ],\r\n    },\r\n    {\r\n      title: \"🧰 Herramientas\",\r\n      items: [\r\n        \"git\", \"github\", \"docker\", \"firebase\", \"intellij\", \"visualstudio\", \"androidstudio\"\r\n      ],\r\n    },\r\n    {\r\n      title: \"📚 Aprendiendo\",\r\n      items: [\r\n        \"mongodb\", \"mysql\", \"microsoftsqlserver\", \"xampp\"\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const getIconClass = (name) => {\r\n    const mapping = {\r\n      java: \"devicon-java-plain\",\r\n      csharp: \"devicon-csharp-line\",\r\n      kotlin: \"devicon-kotlin-plain\",\r\n      html5: \"devicon-html5-plain\",\r\n      css3: \"devicon-css3-plain\",\r\n      javascript: \"devicon-javascript-plain\",\r\n      php: \"devicon-php-plain\",\r\n      spring: \"devicon-spring-plain\",\r\n      dotnet: \"devicon-dotnetcore-plain\",\r\n      blazor: \"devicon-dotnetcore-plain\",\r\n      angular: \"devicon-angularjs-plain\",\r\n      bootstrap: \"devicon-bootstrap-plain\",\r\n      xampp: \"devicon-xampp-plain\",\r\n      mysql: \"devicon-mysql-plain\",\r\n      microsoftsqlserver: \"devicon-microsoftsqlserver-plain\",\r\n      mongodb: \"devicon-mongodb-plain\",\r\n      git: \"devicon-git-plain\",\r\n      github: \"devicon-github-original\",\r\n      docker: \"devicon-docker-plain\",\r\n      firebase: \"devicon-firebase-plain\",\r\n      intellij: \"devicon-intellij-plain\",\r\n      visualstudio: \"devicon-visualstudio-plain\",\r\n      vscode: \"devicon-vscode-plain\",\r\n      androidstudio: \"devicon-androidstudio-plain\"\r\n    };\r\n    return mapping[name] || \"devicon-devicon-plain\";\r\n  };\r\n\r\n  // Para el icono de GitHub queremos forzar color blanco\r\n  const getIconStyle = (name) => {\r\n    if (name === \"github\") return { color: \"white\" };\r\n    return {};\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6 bg-[#0d1117] text-white space-y-8\">\r\n      {sections.map((section) => (\r\n        <div key={section.title}>\r\n          <h2 className=\"text-xl font-semibold mb-4\">{section.title}</h2>\r\n          <div className=\"grid grid-cols-3 gap-6\">\r\n            {section.items.map((tech) => (\r\n              <div\r\n                key={tech}\r\n                className=\"flex flex-col items-center justify-center w-[90px] h-[90px] bg-[#161b22] rounded-lg shadow-md\"\r\n              >\r\n                <i\r\n                  className={`${getIconClass(tech)} colored text-4xl`}\r\n                  style={getIconStyle(tech)}\r\n                ></i>\r\n                <span className=\"text-xs mt-2 capitalize\">{tech}</span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}